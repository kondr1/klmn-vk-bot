const { VK } = require('vk-io')
const { runChrome, downloadFiles } = require('./chrome')
const getHashes = require('./hash')
const mongo = require('./mongo')

const vk = new VK({
  token: process.env.TOKEN,
  pollingGroupId: process.env.GROUP_ID,
  webhookSecret: process.env.SECRET,
  webhookConfirmation: process.env.CONFIRM
})

vk.updates.hear(/–æ—Ö–ª–∞–¥–∏/i, context => {
  context.send({ message: '–¢—Ä–∞—Ö–∞–Ω—å–µ –æ—Ö–ª–∞–∂–¥–µ–Ω–æ' })
  context.sendPhotos('https://sun9-72.userapi.com/c635103/v635103336/5bd0c/JghR3bL4SGY.jpg')
})

vk.updates.hear(/—á–µ–∫–Ω–∏/i, async context => {
  context.send('–©–∞ —á–µ–∫–Ω—É, –ø–æ–≥–æ–¥–∏')
  try {
    await runChrome()
    await downloadFiles()
    const hashs = await getHashes(process.env.OUTDIR)
    let haveNoUpdates = true
    for (const h of hashs) {
      const ok = (await mongo()).checkFile(h.file)
      if (!ok) {
        haveNoUpdates = false
        context.send({ message: `‚ö† –§–∞–π–ª–∏–∫ ${h.file} –æ–±–Ω–æ–≤–∏–ª—Å—è ‚ö†` })
      }
    }
    if (haveNoUpdates) context.send('–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–º–µ–Ω—è–ª–æ—Å—å, —Å–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏, –≤—Å–µ –Ω–æ—Ä–º üòé')
  } catch (err) {
    context.send('–ß–µ—Ç —É –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —á–µ–∫–Ω—É—Ç—å üò•')
  }
})

vk.updates.start({
  webhook: {
    path: '/',
    port: process.env.PORT
  }
}).catch(console.error)
